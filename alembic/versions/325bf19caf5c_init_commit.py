"""Init commit

Revision ID: 325bf19caf5c
Revises: 
Create Date: 2025-05-17 10:15:12.202184

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '325bf19caf5c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('locations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('bluetooth_address', sa.String(), nullable=False),
    sa.Column('coordinates', sa.String(), nullable=False),
    sa.Column('updated_at_in_utc', sa.DateTime(), nullable=True),
    sa.Column('created_at_in_utc', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('bluetooth_address'),
    sa.UniqueConstraint('coordinates'),
    sa.UniqueConstraint('title')
    )
    op.create_index(op.f('ix_locations_id'), 'locations', ['id'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password', sa.String(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('is_student', sa.Boolean(), nullable=False),
    sa.Column('updated_at_in_utc', sa.DateTime(), nullable=True),
    sa.Column('created_at_in_utc', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_table('schedules',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('is_reoccurring', sa.Boolean(), nullable=False),
    sa.Column('date', sa.Date(), nullable=True),
    sa.Column('day', sa.Enum(name='day'), nullable=False),
    sa.Column('start_time_in_utc', sa.Time(), nullable=False),
    sa.Column('end_time_in_utc', sa.Time(), nullable=False),
    sa.Column('updated_at_in_utc', sa.DateTime(), nullable=True),
    sa.Column('created_at_in_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedules_id'), 'schedules', ['id'], unique=False)
    op.create_table('user_additional_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('phone', sa.String(), nullable=True),
    sa.Column('department', sa.Enum(name='department'), nullable=False),
    sa.Column('designation', sa.Enum(name='designation'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_user_additional_details_id'), 'user_additional_details', ['id'], unique=False)
    op.create_table('schedule_instances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('start_time_in_utc', sa.Time(), nullable=False),
    sa.Column('end_time_in_utc', sa.Time(), nullable=False),
    sa.Column('updated_at_in_utc', sa.DateTime(), nullable=True),
    sa.Column('created_at_in_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['locations.id'], ),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_schedule_instances_id'), 'schedule_instances', ['id'], unique=False)
    op.create_table('schedule_users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('schedule_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['schedule_id'], ['schedules.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'schedule_id')
    )
    op.create_table('attendances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('schedule_instance_id', sa.Integer(), nullable=False),
    sa.Column('attendance_status', sa.Enum(name='attendance_status'), nullable=False),
    sa.Column('created_at_in_utc', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['schedule_instance_id'], ['schedule_instances.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('schedule_instance_id'),
    sa.UniqueConstraint('schedule_instance_id', 'user_id', name='uix_attendance_schedule_instance_user')
    )
    op.create_index(op.f('ix_attendances_id'), 'attendances', ['id'], unique=False)
    op.create_table('schedule_instance_users',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('schedule_instance_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['schedule_instance_id'], ['schedule_instances.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'schedule_instance_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('schedule_instance_users')
    op.drop_index(op.f('ix_attendances_id'), table_name='attendances')
    op.drop_table('attendances')
    op.drop_table('schedule_users')
    op.drop_index(op.f('ix_schedule_instances_id'), table_name='schedule_instances')
    op.drop_table('schedule_instances')
    op.drop_index(op.f('ix_user_additional_details_id'), table_name='user_additional_details')
    op.drop_table('user_additional_details')
    op.drop_index(op.f('ix_schedules_id'), table_name='schedules')
    op.drop_table('schedules')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_locations_id'), table_name='locations')
    op.drop_table('locations')
    # ### end Alembic commands ###
